{"version":3,"sources":["apis/streams.js","history.js","actions/index.js","actions/types.js","components/streams/StreamForm.js","components/streams/StreamCreate.js","components/Modal.js","components/streams/StreamDelete.js","components/streams/StreamEdit.js","components/streams/StreamList.js","components/streams/StreamShow.js","components/GoogleAuth.js","components/Header.js","components/App.js","reducers/authReducer.js","reducers/streamReducer.js","reducers/index.js","index.js"],"names":["axios","create","baseURL","createBrowserHistory","fetchStream","id","dispatch","a","streams","get","response","type","payload","data","StreamForm","renderInput","input","label","meta","className","touched","error","autoComplete","renderError","onSubmit","formValues","props","this","handleSubmit","Field","name","component","React","Component","reduxForm","form","validate","errors","title","description","StreamCreate","createStream","connect","getState","userId","auth","post","history","push","Modal","ReactDOM","createPortal","onClick","onDismiss","e","stopPropagation","content","actions","document","querySelector","StreamDelete","match","params","Fragment","deleteStream","to","stream","renderContent","renderActions","state","ownProps","delete","StreamEdit","editStream","initialValues","patch","StreamList","fetchStreams","currentUserId","map","key","renderAdmin","isSignedIn","style","textAlign","renderList","renderCreate","Object","values","StreamShow","GoogleAuth","onAuthChange","signIn","currentUser","getId","signOut","onSignInClick","onSignOutClick","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","Header","App","path","exact","INTIAL_STATE","combineReducers","action","formReducer","_","mapKeys","omit","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","render"],"mappings":"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","file":"static/js/main.15206bd5.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'http://localhost:3001'\r\n});","import { createBrowserHistory } from 'history'; \r\n\r\nexport default createBrowserHistory();","import streams from '../apis/streams';\r\nimport history from '../history';\r\nimport { \r\n    SIGN_IN, \r\n    SIGN_OUT, \r\n    CREATE_STREAM,\r\n    FETCH_STREAMS,\r\n    FETCH_STREAM,\r\n    DELETE_STREAM,\r\n    EDIT_STREAM\r\n } from './types';\r\n\r\nexport const signIn = userId => {\r\n    return {\r\n        type: SIGN_IN,\r\n        payload: userId\r\n    };\r\n};\r\n\r\nexport const signOut = () => {\r\n    return {\r\n        type: SIGN_OUT\r\n    };\r\n};\r\n\r\nexport const createStream = formValues => async (dispatch, getState) => {\r\n    const { userId } = getState().auth;\r\n    const response = await streams.post('/streams', { ...formValues, userId });\r\n    \r\n    dispatch({ type: CREATE_STREAM, payload: response.data });\r\n    history.push('/');\r\n};\r\n\r\nexport const fetchStreams = () => async dispatch => {\r\n    const response = await streams.get('/streams');\r\n    \r\n    dispatch({ type: FETCH_STREAMS, payload: response.data });\r\n};\r\n\r\nexport const fetchStream = (id) => async dispatch => {\r\n    const response = await streams.get(`/streams/${id}`);\r\n    \r\n    dispatch({ type: FETCH_STREAM, payload: response.data });\r\n};\r\n\r\nexport const editStream = (id, formValues) => async dispatch => {\r\n    const response = await streams.patch(`/streams/${id}`, formValues);\r\n    \r\n    dispatch({ type: EDIT_STREAM, payload: response.data });\r\n    history.push('/');\r\n};\r\n\r\nexport const deleteStream = (id) => async dispatch => {\r\n    await streams.delete(`/streams/${id}`);\r\n    \r\n    dispatch({ type: DELETE_STREAM, payload: id });\r\n    history.push('/');\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export const SIGN_IN = 'SIGN_IN';\r\nexport const SIGN_OUT = 'SIGN_OUT';\r\nexport const CREATE_STREAM = 'CREATE_STREAM';\r\nexport const FETCH_STREAMS = 'FETCH_STREAMS';\r\nexport const FETCH_STREAM = 'FETCH_STREAM';\r\nexport const DELETE_STREAM = 'DELETE_STREAM';\r\nexport const EDIT_STREAM = 'EDIT_STREAM';","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nclass StreamForm extends React.Component {\r\n    renderError({ error, touched }) {\r\n        if(touched && error) {\r\n            return (\r\n                <div className=\"ui error message\">\r\n                    <div className=\"header\">{error}</div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderInput = ({ input, label, meta }) => {\r\n        const className = `field ${(meta.touched && meta.error) ? 'error' : ''}`\r\n        return (\r\n            <div className={className}>\r\n                <label>{label}</label>\r\n                <input {...input} autoComplete=\"off\" />\r\n                {this.renderError(meta)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onSubmit = (formValues) => {\r\n        this.props.onSubmit(formValues);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form error\">\r\n                <Field name=\"title\" component={this.renderInput} label=\"Enter Title\" />\r\n                <Field name=\"description\" component={this.renderInput} label=\"Enter Description\" />\r\n                <button className=\"ui button primary\">Submit</button>\r\n            </form>\r\n        );\r\n    }\r\n};\r\n\r\nconst validate = (formValues) => {\r\n    const errors = {};\r\n    if(!formValues.title) {\r\n        errors.title = 'You must enter a title';\r\n    }\r\n    if(!formValues.description) {\r\n        errors.description = 'You must enter a description';\r\n    }\r\n    return errors;\r\n}\r\n\r\nexport default reduxForm({ \r\n    form: 'streamForm',\r\n    validate\r\n })(StreamForm);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStream } from '../../actions';\r\nimport StreamForm from './StreamForm';\r\n\r\nclass StreamCreate extends React.Component {\r\n    \r\n    onSubmit = (formValues) => {\r\n        this.props.createStream(formValues);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Create a Stream</h3>\r\n                <StreamForm onSubmit={this.onSubmit} />\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n export default connect(null, { createStream })(StreamCreate);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst Modal = props => {\r\n    return ReactDOM.createPortal(\r\n        <div onClick={props.onDismiss} className=\"ui dimmer modals visible active\">\r\n            <div onClick={(e) => e.stopPropagation()} className=\"ui standard modal visible active\">\r\n                <div className=\"header\">{props.title}</div>\r\n                <div className=\"content\">{props.content}</div>\r\n                <div className=\"actions\">{props.actions}</div>\r\n            </div>\r\n        </div>,\r\n        document.querySelector('#modal')\r\n    );\r\n};\r\n\r\nexport default Modal;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Modal from '../Modal';\r\nimport history from '../../history';\r\nimport { fetchStream, deleteStream } from '../../actions';\r\n\r\nclass StreamDelete extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchStream(this.props.match.params.id);\r\n    }\r\n\r\n    renderActions() {\r\n        const id = this.props.match.params.id;\r\n        return (\r\n            <React.Fragment>\r\n                <button onClick={() => this.props.deleteStream(id)} className=\"ui button negative\">Delete</button>\r\n                <Link to='/'>\r\n                    <button className=\"ui button\">Cancel</button>\r\n                </Link>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    renderContent() {\r\n        if(!this.props.stream) {\r\n            return 'Are you sure you want to delete this stream?'\r\n        }\r\n        return `Are you sure you want to delete the stream with title: ${this.props.stream.title}`\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal \r\n                title='Delete Stream'\r\n                content={this.renderContent()}\r\n                actions={this.renderActions()}\r\n                onDismiss={() => history.push('/')}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { stream: state.streams[ownProps.match.params.id] }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchStream, deleteStream })(StreamDelete);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchStream, editStream } from '../../actions';\r\nimport StreamForm from './StreamForm';\r\n\r\nclass StreamEdit extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchStream(this.props.match.params.id);\r\n    }\r\n\r\n    onSubmit = (formValues) => {\r\n        this.props.editStream(this.props.match.params.id, formValues);\r\n    };\r\n\r\n    render() {\r\n        if(!this.props.stream) {\r\n            return <div>Loading...</div>;\r\n        } \r\n        const { title, description } = this.props.stream;\r\n        return (\r\n            <div>\r\n                <h3>Edit a Stream</h3>\r\n                <StreamForm \r\n                    initialValues={{ title, description }}\r\n                    onSubmit={this.onSubmit}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n\r\n    return { stream: state.streams[ownProps.match.params.id] };\r\n}\r\n\r\nexport default connect(mapStateToProps, \r\n    { fetchStream, editStream }\r\n    )(StreamEdit);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchStreams } from '../../actions';\r\n\r\nclass StreamList extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchStreams();\r\n    }\r\n\r\n    renderAdmin(stream) {\r\n        if(stream.userId === this.props.currentUserId) {\r\n            return (\r\n                <div className=\"right floated content\">\r\n                    <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">Edit</Link>\r\n                    <Link to={`/streams/delete/${stream.id}`} className=\"ui button negative\">Delete</Link>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderList() {\r\n        return this.props.streams.map(stream => {\r\n            return (\r\n                <div className=\"item\" key={stream.id}>\r\n                    {this.renderAdmin(stream)}\r\n                    <i className=\"large middle aligned icon camera\" />\r\n                    <div className=\"content\">\r\n                        <Link to={`/streams/${stream.id}`} className=\"header\">\r\n                            {stream.title}\r\n                        </Link>\r\n                        <div className=\"description\">{stream.description}</div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    renderCreate() {\r\n        if(this.props.isSignedIn) {\r\n            return (\r\n                <div style={{ textAlign: 'right' }}>\r\n                    <Link to='/streams/new' className=\"ui button primary\">\r\n                        Create Stream\r\n                    </Link>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Streams</h2>\r\n                <div className=\"ui celled list\">{this.renderList()}</div>\r\n                {this.renderCreate()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { \r\n        streams: Object.values(state.streams), \r\n        currentUserId: state.auth.userId,\r\n        isSignedIn: state.auth.isSignedIn\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps, \r\n    { fetchStreams }\r\n    )(StreamList);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchStream } from '../../actions'\r\n\r\nclass StreamShow extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchStream(this.props.match.params.id);\r\n    }\r\n\r\n    render() {\r\n        if(!this.props.stream) {\r\n            return <div>Loading...</div>\r\n        }\r\n\r\n        const { title, description } = this.props.stream;\r\n\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <h5>{description}</h5>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { stream: state.streams[ownProps.match.params.id] }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchStream })(StreamShow);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn, signOut } from '../actions';\r\n\r\nclass GoogleAuth extends React.Component {\r\n\r\n    componentDidMount() {\r\n        window.gapi.load('client:auth2', () => {\r\n            window.gapi.client.init({\r\n                clientId: '1037240922669-rv9rr2j9h267e74rlj7eo3selq1e9vpc.apps.googleusercontent.com',\r\n                scope: 'email'\r\n            }).then(() => {\r\n                this.auth = window.gapi.auth2.getAuthInstance();\r\n                this.onAuthChange(this.auth.isSignedIn.get());\r\n                this.auth.isSignedIn.listen(this.onAuthChange);\r\n            });\r\n        });\r\n    }\r\n\r\n    onAuthChange = (isSignedIn) => {\r\n        if(isSignedIn) {\r\n            this.props.signIn(this.auth.currentUser.get().getId());\r\n        } else {\r\n            this.props.signOut();\r\n        }\r\n    };\r\n\r\n    onSignInClick = () => {\r\n        this.auth.signIn();\r\n    };\r\n\r\n    onSignOutClick = () => {\r\n        this.auth.signOut();\r\n    };\r\n\r\n    renderAuthButton() {\r\n        if(this.props.isSignedIn === null) {\r\n            return null;\r\n        } else if(this.props.isSignedIn) {\r\n            return (\r\n                <button onClick={this.onSignOutClick} className=\"ui red google button\">\r\n                    <i className=\"google icon\">\r\n                        Sign Out\r\n                    </i>\r\n                </button>\r\n            );\r\n        } else {\r\n            return (\r\n                <button onClick={this.onSignInClick} className=\"ui red google button\">\r\n                    <i className=\"google icon\">\r\n                        Sign In With Google\r\n                    </i>\r\n                </button>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div>{this.renderAuthButton()}</div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { isSignedIn: state.auth.isSignedIn }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps, \r\n    { signIn, signOut }\r\n)(GoogleAuth);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport GoogleAuth from './GoogleAuth';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"ui secondary pointing menu\">\r\n            <Link to=\"/\">\r\n                Streamer\r\n            </Link>\r\n            <div className=\"right menu\">\r\n                <Link to=\"/\" className=\"item\">\r\n                    All Streams\r\n                </Link>\r\n            </div>\r\n            <GoogleAuth />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Router, Route, Switch } from 'react-router-dom';\r\nimport StreamCreate from './streams/StreamCreate';\r\nimport StreamDelete from './streams/StreamDelete';\r\nimport StreamEdit from './streams/StreamEdit';\r\nimport StreamList from './streams/StreamList';\r\nimport StreamShow from './streams/StreamShow';\r\nimport Header from './Header';\r\nimport history from '../history';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"ui container\">\r\n            <Router history={history}>\r\n                <div>\r\n                    <Header />\r\n                    <Switch>\r\n                        <Route path=\"/\" exact component={StreamList} />\r\n                        <Route path=\"/streams/new\" exact component={StreamCreate} />\r\n                        <Route path=\"/streams/edit/:id\" exact component={StreamEdit} />\r\n                        <Route path=\"/streams/delete/:id\" exact component={StreamDelete} />\r\n                        <Route path=\"/streams/:id\" exact component={StreamShow} />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","import { SIGN_IN, SIGN_OUT } from '../actions/types';\r\n\r\nconst INTIAL_STATE = {\r\n    isSignedIn: null,\r\n    userId: null\r\n};\r\n\r\nexport default (state=INTIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case SIGN_IN:\r\n            return {...state, isSignedIn: true, userId: action.payload};\r\n        case SIGN_OUT:\r\n            return {...state, isSignedIn: false, userId: null};\r\n        default:\r\n            return state;        \r\n    }\r\n};","import _ from 'lodash';\r\nimport {\r\n    CREATE_STREAM,\r\n    FETCH_STREAMS,\r\n    FETCH_STREAM,\r\n    DELETE_STREAM,\r\n    EDIT_STREAM\r\n} from '../actions/types';\r\n\r\nexport default (state={}, action) => {\r\n    switch(action.type) {\r\n        case FETCH_STREAMS:\r\n            return { ...state, ..._.mapKeys(action.payload, 'id') };\r\n        case FETCH_STREAM:\r\n            return { ...state, [action.payload.id]: action.payload };\r\n        case CREATE_STREAM:\r\n            return { ...state, [action.payload.id]: action.payload };\r\n        case EDIT_STREAM:\r\n            return { ...state, [action.payload.id]: action.payload };\r\n        case DELETE_STREAM:\r\n            return _.omit(state, action.payload);\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport authReducer from './authReducer';\r\nimport streamReducer from './streamReducer';\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    streams: streamReducer\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(reduxThunk))\r\n    );\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>, \r\n    document.querySelector('#root')\r\n    );"],"sourceRoot":""}